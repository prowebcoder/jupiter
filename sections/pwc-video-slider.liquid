{%- style -%}
  .video-carousel {
    padding: {{ section.settings.padding_top }}px 0 {{ section.settings.padding_bottom }}px 0;
    background-color: {{ section.settings.background_color }};
  }
  .video-carousel__heading {
    text-align: {{ section.settings.heading_alignment }};
    color: {{ section.settings.heading_color }};
    margin-bottom: {{ section.settings.heading_spacing }}px;
  }
  .video-carousel__description {
    text-align: {{ section.settings.description_alignment }};
    color: {{ section.settings.description_color }};
    max-width: 800px;
    margin: 0 auto 30px;
  }
  .video-carousel__container {
    position: relative;
  }
  .video-carousel__slide {
    position: relative;
    padding-bottom: 56.25%; /* 16:9 aspect ratio */
    height: 0;
    overflow: hidden;
  }
  .video-carousel__video-wrapper {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }
  .video-carousel__video {
    width: 100%;
    height: 100%;
    border: none;
  }
  .video-carousel__caption {
    text-align: center;
    margin-top: 15px;
    color: {{ section.settings.caption_color }};
  }
  .video-carousel__navigation {
    display: flex;
    justify-content: center;
    gap: 20px;
    margin-top: 20px;
  }
  .video-carousel__button {
    background: none;
    border: none;
    cursor: pointer;
    padding: 10px;
  }
  .video-carousel__pagination {
    text-align: center;
    margin-top: 20px;
  }
  @media (max-width: 749px) {
    .video-carousel {
      padding: {{ section.settings.padding_top_mobile }}px 0 {{ section.settings.padding_bottom_mobile }}px 0;
    }
  }
{%- endstyle -%}

<div class="video-carousel color-{{ section.settings.color_scheme }}">
  <div class="page-width">
    <div class="video-carousel__header">
      {%- if section.settings.heading != blank -%}
        <h2 class="video-carousel__heading {{ section.settings.heading_size }}">{{ section.settings.heading }}</h2>
      {%- endif -%}

      {%- if section.settings.description != blank -%}
        <div class="video-carousel__description">{{ section.settings.description }}</div>
      {%- endif -%}
    </div>

    <div class="video-carousel__container" id="VideoCarousel-{{ section.id }}">
      <div class="video-carousel__wrapper">
        {%- for block in section.blocks -%}
          <div class="video-carousel__slide" {{ block.shopify_attributes }}>
            {%- if block.settings.video_type == 'youtube' and block.settings.video_id != blank -%}
              <div class="video-carousel__video-wrapper">
                <iframe
                  class="video-carousel__video js-youtube"
                  src="https://www.youtube.com/embed/{{ block.settings.video_id }}?enablejsapi=1&autoplay=0&mute={% if block.settings.muted %}1{% else %}0{% endif %}&loop={% if block.settings.loop_video %}1{% else %}0{% endif %}&controls={% if block.settings.controls %}1{% else %}0{% endif %}"
                  frameborder="0"
                  allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
                  allowfullscreen
                  data-video-id="{{ block.settings.video_id }}"
                ></iframe>
              </div>
            {%- elsif block.settings.video_type == 'external' and block.settings.video_url != blank -%}
              <div class="video-carousel__video-wrapper">
                <video
                  class="video-carousel__video"
                  {% if block.settings.autoplay_video %}
                    autoplay
                  {% endif %}
                  {% if block.settings.loop_video %}
                    loop
                  {% endif %}
                  {% if block.settings.muted %}
                    muted
                  {% endif %}
                  {% if block.settings.controls %}
                    controls
                  {% endif %}
                  playsinline
                >
                  <source src="{{ block.settings.video_url }}" type="video/mp4">
                  Your browser does not support the video tag.
                </video>
              </div>
            {%- endif -%}

            {%- if block.settings.caption != blank -%}
              <div class="video-carousel__caption">{{ block.settings.caption }}</div>
            {%- endif -%}
          </div>
        {%- endfor -%}
      </div>

      {%- if section.settings.show_navigation and section.blocks.size > 1 -%}
        <div class="video-carousel__navigation">
          <button
            class="video-carousel__button video-carousel__button--prev"
            aria-label="{{ 'general.slider.previous_slide' | t }}"
          >
            {% render 'icon-arrow' %}
          </button>
          <button
            class="video-carousel__button video-carousel__button--next"
            aria-label="{{ 'general.slider.next_slide' | t }}"
          >
            {% render 'icon-arrow' %}
          </button>
        </div>
      {%- endif -%}

      {%- if section.settings.show_pagination and section.blocks.size > 1 -%}
        <div class="video-carousel__pagination"></div>
      {%- endif -%}
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    class VideoCarousel extends HTMLElement {
      constructor() {
        super();
        this.slider = this.querySelector('.video-carousel__wrapper');
        this.sliderItems = this.querySelectorAll('.video-carousel__slide');
        this.prevButton = this.querySelector('.video-carousel__button--prev');
        this.nextButton = this.querySelector('.video-carousel__button--next');
        this.pagination = this.querySelector('.video-carousel__pagination');

        this.currentIndex = 0;
        this.autoPlayInterval = null;

        if (this.sliderItems.length > 1) {
          this.initSlider();
          if ({{ section.settings.autoplay | json }}) {
            this.startAutoPlay();
          }
        }
      }

      initSlider() {
        this.sliderItems.forEach((item, index) => {
          item.style.order = index;
        });

        if (this.prevButton && this.nextButton) {
          this.prevButton.addEventListener('click', () => this.prevSlide());
          this.nextButton.addEventListener('click', () => this.nextSlide());
        }

        if (this.pagination) {
          this.createPagination();
        }

        this.updateSlider();
      }

      createPagination() {
        this.sliderItems.forEach((_, index) => {
          const dot = document.createElement('span');
          dot.classList.add('pagination-dot');
          if (index === 0) dot.classList.add('active');
          dot.addEventListener('click', () => this.goToSlide(index));
          this.pagination.appendChild(dot);
        });
      }

      updateSlider() {
        this.sliderItems.forEach((item, index) => {
          item.classList.toggle('active', index === this.currentIndex);
        });

        if (this.pagination) {
          const dots = this.pagination.querySelectorAll('.pagination-dot');
          dots.forEach((dot, index) => {
            dot.classList.toggle('active', index === this.currentIndex);
          });
        }
      }

      prevSlide() {
        this.currentIndex = (this.currentIndex - 1 + this.sliderItems.length) % this.sliderItems.length;
        this.updateSlider();
        this.resetAutoPlay();
      }

      nextSlide() {
        this.currentIndex = (this.currentIndex + 1) % this.sliderItems.length;
        this.updateSlider();
        this.resetAutoPlay();
      }

      goToSlide(index) {
        this.currentIndex = index;
        this.updateSlider();
        this.resetAutoPlay();
      }

      startAutoPlay() {
        this.autoPlayInterval = setInterval(() => {
          this.nextSlide();
        }, {{ section.settings.autoplay_speed }});
      }

      resetAutoPlay() {
        if (this.autoPlayInterval) {
          clearInterval(this.autoPlayInterval);
          this.startAutoPlay();
        }
      }
    }

    customElements.define('video-carousel-component', VideoCarousel);

    const videoCarousels = document.querySelectorAll('#VideoCarousel-{{ section.id }}');
    videoCarousels.forEach(carousel => {
      new VideoCarousel(carousel);
    });
  });
</script>

{% schema %}
{
  "name": "Video Carousel",
  "tag": "section",
  "class": "section",
  "settings": [
    {
      "type": "text",
      "id": "heading",
      "label": "Heading",
      "default": "Video Gallery"
    },
    {
      "type": "select",
      "id": "heading_size",
      "options": [
        {
          "value": "h2",
          "label": "t:sections.all.heading_size.options__1.label"
        },
        {
          "value": "h1",
          "label": "t:sections.all.heading_size.options__2.label"
        },
        {
          "value": "h0",
          "label": "t:sections.all.heading_size.options__3.label"
        }
      ],
      "default": "h1",
      "label": "t:sections.all.heading_size.label"
    },
    {
      "type": "richtext",
      "id": "description",
      "label": "Description"
    },
    {
      "type": "select",
      "id": "heading_alignment",
      "options": [
        {
          "value": "left",
          "label": "Left"
        },
        {
          "value": "center",
          "label": "Center"
        },
        {
          "value": "right",
          "label": "Right"
        }
      ],
      "default": "center",
      "label": "Heading alignment"
    },
    {
      "type": "select",
      "id": "description_alignment",
      "options": [
        {
          "value": "left",
          "label": "Left"
        },
        {
          "value": "center",
          "label": "Center"
        },
        {
          "value": "right",
          "label": "Right"
        }
      ],
      "default": "center",
      "label": "Description alignment"
    },
    {
      "type": "color",
      "id": "heading_color",
      "label": "Heading color",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "description_color",
      "label": "Description color",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "caption_color",
      "label": "Caption color",
      "default": "#000000"
    },
    {
      "type": "range",
      "id": "heading_spacing",
      "min": 0,
      "max": 100,
      "step": 5,
      "unit": "px",
      "label": "Heading bottom spacing",
      "default": 20
    },
    {
      "type": "checkbox",
      "id": "show_navigation",
      "label": "Show navigation arrows",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_pagination",
      "label": "Show pagination dots",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "autoplay",
      "label": "Autoplay carousel",
      "default": false
    },
    {
      "type": "range",
      "id": "autoplay_speed",
      "min": 1000,
      "max": 8000,
      "step": 500,
      "unit": "ms",
      "label": "Autoplay speed",
      "default": 5000
    },
    {
      "type": "color",
      "id": "background_color",
      "label": "Background color",
      "default": "transparent"
    },
    {
      "type": "header",
      "content": "Section padding"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Top padding",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Bottom padding",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_top_mobile",
      "min": 0,
      "max": 100,
      "step": 2,
      "unit": "px",
      "label": "Top padding (mobile)",
      "default": 24
    },
    {
      "type": "range",
      "id": "padding_bottom_mobile",
      "min": 0,
      "max": 100,
      "step": 2,
      "unit": "px",
      "label": "Bottom padding (mobile)",
      "default": 24
    }
  ],
  "blocks": [
    {
      "type": "video",
      "name": "Video",
      "settings": [
        {
          "type": "select",
          "id": "video_type",
          "label": "Video type",
          "options": [
            {
              "value": "youtube",
              "label": "YouTube"
            },
            {
              "value": "external",
              "label": "External video"
            }
          ],
          "default": "youtube",
          "info": "Select the type of video you want to add"
        },
        {
          "type": "text",
          "id": "video_id",
          "label": "YouTube video ID",
          "info": "Required for YouTube videos. Example: dQw4w9WgXcQ"
        },
        {
          "type": "text",
          "id": "video_url",
          "label": "Video URL",
          "info": "Required for external videos. Direct link to .mp4 video file"
        },
        {
          "type": "text",
          "id": "caption",
          "label": "Caption",
          "info": "Optional caption for the video"
        },
        {
          "type": "checkbox",
          "id": "autoplay_video",
          "label": "Autoplay video",
          "default": false,
          "info": "Note: Autoplay may be restricted by browsers"
        },
        {
          "type": "checkbox",
          "id": "loop_video",
          "label": "Loop video",
          "default": false
        },
        {
          "type": "checkbox",
          "id": "muted",
          "label": "Muted",
          "default": true,
          "info": "Recommended for autoplay videos"
        },
        {
          "type": "checkbox",
          "id": "controls",
          "label": "Show controls",
          "default": true
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Video Carousel",
      "blocks": [
        {
          "type": "video",
          "settings": {
            "video_type": "youtube",
            "video_id": "dQw4w9WgXcQ",
            "caption": "Featured video 1"
          }
        },
        {
          "type": "video",
          "settings": {
            "video_type": "youtube",
            "video_id": "9bZkp7q19f0",
            "caption": "Featured video 2"
          }
        }
      ]
    }
  ]
}
{% endschema %}
