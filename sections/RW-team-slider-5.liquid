{%- assign sec_id = '#shopify-section-' | append: section.id -%}
{%- assign parts = sec_id | split: '_' -%}
{%- assign last_lower = parts | last -%}
{%- assign last_part = last_lower | downcase -%}

<pc-team-carousel-{{ last_part }} class="pc-team-carousel">
  <div class="pc-team-carousel-wrapper">
    {% if section.settings.title != blank %}
      <h2 class="pc-team-title">{{ section.settings.title }}</h2>
    {% endif %}
    
    <div class="pc-carousel-container">
      <button class="pc-nav-arrow pc-left">
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="24" height="24">
          <path d="M15.41 16.59L10.83 12l4.58-4.59L14 6l-6 6 6 6 1.41-1.41z" fill="currentColor"/>
        </svg>
      </button>
      
      <div class="pc-carousel-track">
        {% for block in section.blocks %}
          <div class="pc-card" data-index="{{ forloop.index0 }}">
            {% if block.settings.image != blank %}
              {% assign image_class = 'pc-team-image-' | append: last_part %}
              {{ 
                block.settings.image 
                | image_url: width: 800 
                | image_tag: 
                    loading: 'lazy', 
                    class: image_class,
                    alt: block.settings.name 
              }}
            {% else %}
              {{ 'collection-1' | placeholder_svg_tag: 'pc-placeholder' }}
            {% endif %}
          </div>
        {% endfor %}
      </div>
      
      <button class="pc-nav-arrow pc-right">
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="24" height="24">
          <path d="M8.59 16.59L13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z" fill="currentColor"/>
        </svg>
      </button>
    </div>
    
    <div class="pc-member-info">
      {% if section.blocks.size > 0 %}
        <h3 class="pc-member-name">{{ section.blocks.first.settings.name }}</h3>
        <p class="pc-member-role">{{ section.blocks.first.settings.role }}</p>
      {% endif %}
    </div>
    
    <div class="pc-dots">
      {% for block in section.blocks %}
        <div class="pc-dot {% if forloop.first %}pc-active{% endif %}" data-index="{{ forloop.index0 }}"></div>
      {% endfor %}
    </div>
  </div>
</pc-team-carousel-{{ last_part }}>

<style>
  {{ sec_id }} .pc-team-carousel-wrapper {
    padding: {{ section.settings.mobile_padding_top }}px 20px {{ section.settings.mobile_padding_bottom }}px;
    background-color: {{ section.settings.background_color }};
    position: relative;
    overflow: hidden;
  }
  
  {{ sec_id }} .pc-team-title {
    font-size: {{ section.settings.title_font_size_mobile }}px;
    font-weight: {{ section.settings.title_font_weight }};
    text-align: center;
    text-transform: uppercase;
    letter-spacing: {{ section.settings.title_letter_spacing }}em;
    margin-bottom: 30px;
    color: {{ section.settings.title_color }};
   
    {% if section.settings.enable_title_shadow %}
      text-shadow: 0 2px 4px rgba(0,0,0,0.1);
    {% endif %}

    z-index: 0;
    position: absolute;
    top: 0px;
    left: 50%;
    transform: translate(-50%,-40%);
    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    background: linear-gradient(to bottom, rgb(8 42 123 / 35%) 30%, rgb(255 255 255 / 0%) 76%);
    -webkit-background-clip: text;
    background-clip: text;
    color: transparent;
  }
  
  {{ sec_id }} .pc-carousel-container {
    width: 100%;
    max-width: {{ section.settings.max_width }}px;
    height: {{ section.settings.carousel_height_mobile }}px;
    position: relative;
    margin: 0 auto;
    perspective: 1000px;
  }
  
  {{ sec_id }} .pc-carousel-track {
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
    position: relative;
    transform-style: preserve-3d;
    transition: transform 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94);
  }
  
  {{ sec_id }} .pc-card {
    position: absolute;
    width: {{ section.settings.card_width_mobile }}px;
    height: {{ section.settings.card_height_mobile }}px;
    background: white;
    border-radius: {{ section.settings.card_radius }}px;
    overflow: hidden;
    box-shadow: 0 20px 40px rgba(0, 0, 0, 0.15);
    transition: all 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94);
    cursor: pointer;
    z-index: 1;
  }
  
  {{ sec_id }} .pc-card img,
  {{ sec_id }} .pc-placeholder {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: all 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94);
  }
  
  {{ sec_id }} .pc-card.pc-center {
    z-index: 10;
    transform: scale(1.1) translateZ(0);
  }
  
  {{ sec_id }} .pc-card.pc-center img {
    filter: none;
  }
  
  {{ sec_id }} .pc-card.pc-left-2 {
    transform: translateX(calc(-1 * {{ section.settings.card_spacing }}px - 100%)) scale(0.8) translateZ(-300px);
    opacity: 0.7;
  }
  
  {{ sec_id }} .pc-card.pc-left-2 img {
    filter: grayscale(100%);
  }
  
  {{ sec_id }} .pc-card.pc-left-1 {
    transform: translateX(calc(-1 * {{ section.settings.card_spacing }}px)) scale(0.9) translateZ(-100px);
    opacity: 0.9;
  }
  
  {{ sec_id }} .pc-card.pc-left-1 img {
    filter: grayscale(100%);
  }
  
  {{ sec_id }} .pc-card.pc-right-1 {
    transform: translateX({{ section.settings.card_spacing }}px) scale(0.9) translateZ(-100px);
    opacity: 0.9;
  }
  
  {{ sec_id }} .pc-card.pc-right-1 img {
    filter: grayscale(100%);
  }
  
  {{ sec_id }} .pc-card.pc-right-2 {
    transform: translateX(calc({{ section.settings.card_spacing }}px + 100%)) scale(0.8) translateZ(-300px);
    opacity: 0.7;
  }
  
  {{ sec_id }} .pc-card.pc-right-2 img {
    filter: grayscale(100%);
  }
  
  {{ sec_id }} .pc-card.pc-hidden {
    opacity: 0;
    pointer-events: none;
  }
  
  {{ sec_id }} .pc-member-info {
    text-align: center;
    margin-top: 40px;
    transition: all 0.5s ease-out;
  }
  
  {{ sec_id }} .pc-member-name {
    color: {{ section.settings.name_color }};
    font-size: {{ section.settings.name_font_size_mobile }}px;
    font-weight: {{ section.settings.name_font_weight }};
    margin-bottom: 10px;
    position: relative;
    display: inline-block;
    transition: opacity 0.3s ease;
  }
  
  {{ sec_id }} .pc-member-name::before,
  {{ sec_id }} .pc-member-name::after {
    content: "";
    position: absolute;
    top: 50%;
    width: {{ section.settings.name_line_width }}px;
    height: 2px;
    background: {{ section.settings.name_color }};
  }
  
  {{ sec_id }} .pc-member-name::before {
    right: calc(100% + {{ section.settings.name_line_gap }}px);
  }
  
  {{ sec_id }} .pc-member-name::after {
    left: calc(100% + {{ section.settings.name_line_gap }}px);
  }
  
  {{ sec_id }} .pc-member-role {
    color: {{ section.settings.role_color }};
    font-size: {{ section.settings.role_font_size_mobile }}px;
    font-weight: 500;
    text-transform: uppercase;
    letter-spacing: 0.1em;
    padding: 10px 0;
    margin-top: -10px;
    position: relative;
    transition: opacity 0.3s ease;
  }
  
  {{ sec_id }} .pc-dots {
    display: flex;
    justify-content: center;
    gap: 10px;
    margin-top: 40px;
  }
  
  {{ sec_id }} .pc-dot {
    width: 12px;
    height: 12px;
    border-radius: 50%;
    background: {{ section.settings.dot_color | color_modify: 'alpha', 0.2 }};
    cursor: pointer;
    transition: all 0.3s ease;
  }
  
  {{ sec_id }} .pc-dot.pc-active {
    background: {{ section.settings.dot_color }};
    transform: scale(1.2);
  }
  
  {{ sec_id }} .pc-nav-arrow {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    background: {{ section.settings.arrow_color }};
    color: white;
    width: 40px;
    height: 40px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    z-index: 20;
    transition: all 0.3s ease;
    border: none;
    outline: none;
  }
  
  {{ sec_id }} .pc-nav-arrow svg {
    width: 24px;
    height: 24px;
  }
  
  {{ sec_id }} .pc-nav-arrow:hover {
    background: {{ section.settings.arrow_hover_color }};
    transform: translateY(-50%) scale(1.1);
  }
  
  {{ sec_id }} .pc-nav-arrow.pc-left {
    left: 20px;
  }
  
  {{ sec_id }} .pc-nav-arrow.pc-right {
    right: 20px;
  }
  
  @media (min-width: 768px) {
    {{ sec_id }} .pc-team-carousel-wrapper {
      padding: {{ section.settings.desktop_padding_top }}px 20px {{ section.settings.desktop_padding_bottom }}px;
    }
    
    {{ sec_id }} .pc-team-title {
      font-size: {{ section.settings.title_font_size_desktop }}px;
      margin-bottom: 60px;
    }
    
    {{ sec_id }} .pc-carousel-container {
      height: {{ section.settings.carousel_height_desktop }}px;
    }
    
    {{ sec_id }} .pc-card {
      width: {{ section.settings.card_width_desktop }}px;
      height: {{ section.settings.card_height_desktop }}px;
    }
    
    {{ sec_id }} .pc-member-name {
      font-size: {{ section.settings.name_font_size_desktop }}px;
    }
    
    {{ sec_id }} .pc-member-role {
      font-size: {{ section.settings.role_font_size_desktop }}px;
    }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const teamCarousel = document.querySelector('pc-team-carousel-{{ last_part }}');
    if (!teamCarousel) return;
    
    const cards = teamCarousel.querySelectorAll('.pc-card');
    const dots = teamCarousel.querySelectorAll('.pc-dot');
    const memberName = teamCarousel.querySelector('.pc-member-name');
    const memberRole = teamCarousel.querySelector('.pc-member-role');
    const leftArrow = teamCarousel.querySelector('.pc-nav-arrow.pc-left');
    const rightArrow = teamCarousel.querySelector('.pc-nav-arrow.pc-right');
    
    if (!cards.length) return;
    
    let currentIndex = 0;
    let isAnimating = false;
    
    function updateCarousel(newIndex) {
      if (isAnimating || newIndex === currentIndex) return;
      isAnimating = true;
      
      currentIndex = (newIndex + cards.length) % cards.length;
      
      cards.forEach((card, i) => {
        const offset = (i - currentIndex + cards.length) % cards.length;
        
        card.classList.remove(
          'pc-center',
          'pc-left-1',
          'pc-left-2',
          'pc-right-1',
          'pc-right-2',
          'pc-hidden'
        );
        
        if (offset === 0) {
          card.classList.add('pc-center');
        } else if (offset === 1) {
          card.classList.add('pc-right-1');
        } else if (offset === 2) {
          card.classList.add('pc-right-2');
        } else if (offset === cards.length - 1) {
          card.classList.add('pc-left-1');
        } else if (offset === cards.length - 2) {
          card.classList.add('pc-left-2');
        } else {
          card.classList.add('pc-hidden');
        }
      });
      
      dots.forEach((dot, i) => {
        dot.classList.toggle('pc-active', i === currentIndex);
      });
      
      if (memberName) memberName.style.opacity = '0';
      if (memberRole) memberRole.style.opacity = '0';
      
      setTimeout(() => {
        const activeCard = cards[currentIndex];
        if (activeCard) {
          const name = activeCard.dataset.name;
          const role = activeCard.dataset.role;
          
          if (memberName && name) memberName.textContent = name;
          if (memberRole && role) memberRole.textContent = role;
        }
        
        if (memberName) memberName.style.opacity = '1';
        if (memberRole) memberRole.style.opacity = '1';
      }, 300);
      
      setTimeout(() => {
        isAnimating = false;
      }, 800);
    }
    
    // Set data attributes for JS access
    cards.forEach((card, i) => {
      const nameEl = card.querySelector('.pc-member-name');
      const roleEl = card.querySelector('.pc-member-role');
      if (nameEl) card.dataset.name = nameEl.textContent;
      if (roleEl) card.dataset.role = roleEl.textContent;
    });
    
    if (leftArrow) {
      leftArrow.addEventListener('click', () => {
        updateCarousel(currentIndex - 1);
      });
    }
    
    if (rightArrow) {
      rightArrow.addEventListener('click', () => {
        updateCarousel(currentIndex + 1);
      });
    }
    
    if (dots) {
      dots.forEach((dot, i) => {
        dot.addEventListener('click', () => {
          updateCarousel(i);
        });
      });
    }
    
    cards.forEach((card, i) => {
      card.addEventListener('click', () => {
        updateCarousel(i);
      });
    });
    
    // Initialize the carousel
    updateCarousel(1);
  });
</script>

{% schema %}
{
  "name": "PWC - Team Carousel #1",
  "settings": [
    {
      "type": "header",
      "content": "General Settings"
    },
    {
      "type": "text",
      "id": "title",
      "label": "Section Title",
      "default": "OUR TEAM"
    },
    {
      "type": "color",
      "id": "background_color",
      "label": "Background Color",
      "default": "#f5f5f5"
    },
    {
      "type": "range",
      "id": "max_width",
      "label": "Max Width",
      "min": 800,
      "max": 1600,
      "step": 50,
      "unit": "px",
      "default": 1200
    },
    {
      "type": "range",
      "id": "card_spacing",
      "label": "Card Spacing",
      "min": 100,
      "max": 300,
      "step": 10,
      "unit": "px",
      "default": 200
    },
    {
      "type": "range",
      "id": "card_radius",
      "label": "Card Border Radius",
      "min": 0,
      "max": 50,
      "step": 2,
      "unit": "px",
      "default": 20
    },
    {
      "type": "header",
      "content": "Typography Settings"
    },
    {
      "type": "color",
      "id": "title_color",
      "label": "Title Color",
      "default": "#082a7b"
    },
    {
      "type": "range",
      "id": "title_font_weight",
      "label": "Title Font Weight",
      "min": 300,
      "max": 900,
      "step": 100,
      "default": 900
    },
    {
      "type": "range",
      "id": "title_letter_spacing",
      "label": "Title Letter Spacing",
      "min": 0,
      "max": 1,
      "step": 0.1,
      "unit": "em",
      "default": 0.1
    },
    {
      "type": "checkbox",
      "id": "enable_title_shadow",
      "label": "Enable Title Shadow",
      "default": true
    },
    {
      "type": "color",
      "id": "name_color",
      "label": "Name Color",
      "default": "#082a7b"
    },
    {
      "type": "range",
      "id": "name_font_weight",
      "label": "Name Font Weight",
      "min": 300,
      "max": 900,
      "step": 100,
      "default": 700
    },
    {
      "type": "range",
      "id": "name_line_width",
      "label": "Name Line Width",
      "min": 20,
      "max": 200,
      "step": 10,
      "unit": "px",
      "default": 100
    },
    {
      "type": "range",
      "id": "name_line_gap",
      "label": "Name Line Gap",
      "min": 5,
      "max": 50,
      "step": 1,
      "unit": "px",
      "default": 20
    },
    {
      "type": "color",
      "id": "role_color",
      "label": "Role Color",
      "default": "#848696"
    },
    {
      "type": "color",
      "id": "dot_color",
      "label": "Dot Color",
      "default": "#082a7b"
    },
    {
      "type": "color",
      "id": "arrow_color",
      "label": "Arrow Color",
      "default": "rgba(8, 42, 123, 0.6)"
    },
    {
      "type": "color",
      "id": "arrow_hover_color",
      "label": "Arrow Hover Color",
      "default": "rgba(0, 0, 0, 0.8)"
    },
    {
      "type": "header",
      "content": "Desktop Settings"
    },
    {
      "type": "range",
      "id": "desktop_padding_top",
      "label": "Top Padding (Desktop)",
      "min": 0,
      "max": 200,
      "step": 10,
      "unit": "px",
      "default": 100
    },
    {
      "type": "range",
      "id": "desktop_padding_bottom",
      "label": "Bottom Padding (Desktop)",
      "min": 0,
      "max": 200,
      "step": 10,
      "unit": "px",
      "default": 100
    },
    {
      "type": "range",
      "id": "title_font_size_desktop",
      "label": "Title Font Size (Desktop)",
      "min": 30,
      "max": 150,
      "step": 5,
      "unit": "px",
      "default": 75
    },
    {
      "type": "range",
      "id": "carousel_height_desktop",
      "label": "Carousel Height (Desktop)",
      "min": 300,
      "max": 800,
      "step": 20,
      "unit": "px",
      "default": 440
    },
    {
      "type": "range",
      "id": "card_width_desktop",
      "label": "Card Width (Desktop)",
      "min": 150,
      "max": 400,
      "step": 10,
      "unit": "px",
      "default": 280
    },
    {
      "type": "range",
      "id": "card_height_desktop",
      "label": "Card Height (Desktop)",
      "min": 200,
      "max": 600,
      "step": 20,
      "unit": "px",
      "default": 380
    },
    {
      "type": "range",
      "id": "name_font_size_desktop",
      "label": "Name Font Size (Desktop)",
      "min": 20,
      "max": 60,
      "step": 2,
      "unit": "px",
      "default": 40
    },
    {
      "type": "range",
      "id": "role_font_size_desktop",
      "label": "Role Font Size (Desktop)",
      "min": 12,
      "max": 36,
      "step": 1,
      "unit": "px",
      "default": 24
    },
    {
      "type": "header",
      "content": "Mobile Settings"
    },
    {
      "type": "range",
      "id": "mobile_padding_top",
      "label": "Top Padding (Mobile)",
      "min": 0,
      "max": 150,
      "step": 5,
      "unit": "px",
      "default": 60
    },
    {
      "type": "range",
      "id": "mobile_padding_bottom",
      "label": "Bottom Padding (Mobile)",
      "min": 0,
      "max": 150,
      "step": 5,
      "unit": "px",
      "default": 60
    },
    {
      "type": "range",
      "id": "title_font_size_mobile",
      "label": "Title Font Size (Mobile)",
      "min": 20,
      "max": 80,
      "step": 2,
      "unit": "px",
      "default": 46
    },
    {
      "type": "range",
      "id": "carousel_height_mobile",
      "label": "Carousel Height (Mobile)",
      "min": 200,
      "max": 600,
      "step": 20,
      "unit": "px",
      "default": 320
    },
    {
      "type": "range",
      "id": "card_width_mobile",
      "label": "Card Width (Mobile)",
      "min": 100,
      "max": 300,
      "step": 10,
      "unit": "px",
      "default": 200
    },
    {
      "type": "range",
      "id": "card_height_mobile",
      "label": "Card Height (Mobile)",
      "min": 150,
      "max": 500,
      "step": 10,
      "unit": "px",
      "default": 280
    },
    {
      "type": "range",
      "id": "name_font_size_mobile",
      "label": "Name Font Size (Mobile)",
      "min": 16,
      "max": 40,
      "step": 2,
      "unit": "px",
      "default": 32
    },
    {
      "type": "range",
      "id": "role_font_size_mobile",
      "label": "Role Font Size (Mobile)",
      "min": 10,
      "max": 24,
      "step": 1,
      "unit": "px",
      "default": 18
    }
  ],
  "blocks": [
    {
      "type": "team_member",
      "name": "Team Member",
      "settings": [
        {
          "type": "image_picker",
          "id": "image",
          "label": "Image"
        },
        {
          "type": "text",
          "id": "name",
          "label": "Name",
          "default": "Team Member"
        },
        {
          "type": "text",
          "id": "role",
          "label": "Role",
          "default": "Position"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "PWC - Team Carousel #1",
      "category": "Custom",
      "blocks": [
        {
          "type": "team_member",
          "settings": {
            "name": "Emily Kim",
            "role": "Founder"
          }
        },
        {
          "type": "team_member",
          "settings": {
            "name": "Michael Steward",
            "role": "Creative Director"
          }
        },
        {
          "type": "team_member",
          "settings": {
            "name": "Emma Rodriguez",
            "role": "Lead Developer"
          }
        }
      ]
    }
  ]
}
{% endschema %}