{%- assign sid = '#shopify-section-' | append: section.id -%}

{%- style -%}
  {{ sid }} {
    padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
    background-color: {{ section.settings.background_color }};
  }

  {% if section.settings.countdown_font %}
    {% assign countdown_font = section.settings.countdown_font %}
    {{ countdown_font | font_face }}
  {% endif %}

  @media screen and (min-width: 750px) {
    {{ sid }} {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }

  {{ sid }} .pc-section-padding {
    max-width: {{ section.settings.container_width }}px;
    margin: 0 auto;
    width: 100%;
    padding-left: 15px;
    padding-right: 15px;
  }

  {{ sid }} .pc-video-grid-item {
    text-align: {{ section.settings.text_alignment }};
    {% if section.settings.countdown_font %}
      font-family: {{ section.settings.countdown_font.family }}, {{ section.settings.countdown_font.fallback_families }};
      font-weight: {{ section.settings.countdown_font.weight }};
    {% endif %}
  }

  {{ sid }} .pc-video-grid-item__heading {
    font-size: {{ section.settings.heading_font_size }}px;
    color: {{ section.settings.heading_color }};
    margin-bottom: 10px;
    {% if section.settings.video_font %}
      font-family: {{ section.settings.video_font.family }}, {{ section.settings.countdown_font.fallback_families }};
      font-weight: {{ section.settings.video_font.weight }};
    {% endif %}
  }

  {{ sid }} .pc-video-grid-item__text {
    font-size: {{ section.settings.text_font_size }}px;
    color: {{ section.settings.text_color }};
    margin-bottom: 15px;
  }

  {{ sid }} .pc-video-grid {
    display: grid;
    grid-template-columns: repeat({{ section.settings.columns_mobile }}, 1fr);
    gap: {{ section.settings.grid_gap }}px;
  }

  @media screen and (min-width: 750px) {
    {{ sid }} .pc-video-grid {
      grid-template-columns: repeat({{ section.settings.columns_desktop }}, 1fr);
    }
  }

  /* Slider styles */
  {{ sid }} .pc-video-slider {
    display: none;
    position: relative;
    overflow: hidden;
  }

  {{ sid }} .pc-video-slider-container {
    display: flex;
    transition: transform 0.5s ease;
    width: 100%;
  }

  {{ sid }} .pc-video-slide {
    min-width: 100%;
    padding: 0 5px;
    box-sizing: border-box;
  }

  {{ sid }} .pc-slider-nav {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    width: 100%;
    display: flex;
    justify-content: space-between;
    pointer-events: none;
    z-index: 1;
  }

  {{ sid }} .pc-slider-arrow {
    pointer-events: auto;
    background: rgba(255,255,255,0.7);
    border-radius: 50%;
    width: 40px;
    height: 40px;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: all 0.3s ease;
    border: none;
  }

  {{ sid }} .pc-slider-arrow:hover {
    background: rgba(255,255,255,0.9);
  }

  {{ sid }} .pc-slider-arrow svg {
    width: 20px;
    height: 20px;
  }

  {{ sid }} .pc-slider-dots {
    display: flex;
    justify-content: center;
    margin-top: 15px;
  }

  {{ sid }} .pc-slider-dot {
    width: 10px;
    height: 10px;
    border-radius: 50%;
    background: #ccc;
    margin: 0 5px;
    cursor: pointer;
  }

  {{ sid }} .pc-slider-dot.active {
    background: #333;
  }

  @media screen and (max-width: 749px) {
    {% if section.settings.enable_mobile_slider %}
      {{ sid }} .pc-video-grid {
        display: none;
      }

      {{ sid }} .pc-video-slider {
        display: block;
      }
    {% endif %}
  }

  {{ sid }} .pc-video-wrapper {
    position: relative;
    padding-bottom: 56.25%; /* 16:9 aspect ratio */
    height: 0;
    overflow: hidden;
    margin-bottom: 15px;
    background-color: #000;
    border-radius: {{ section.settings.video_border_radius }}px;
  }

  {{ sid }} .pc-video-wrapper iframe,
  {{ sid }} .pc-video-wrapper video {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    border: none;
  }

  {{ sid }} .pc-video-placeholder {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: #f5f5f5;
    color: #999;
    border-radius: {{ section.settings.video_border_radius }}px;
  }

  {{ sid }} .pc-section-heading {
    text-align: {{ section.settings.heading_alignment }};
    color: {{ section.settings.heading_color_sv }};
    font-size: {{ section.settings.section_heading_size }}px;
    margin-bottom: {{ section.settings.heading_spacing }}px;
  }

  {{ sid }} .pc-section-heading {
    {% if section.settings.heading_font %}
      font-family: {{ section.settings.heading_font.family }}, {{ section.settings.heading_font.fallback_families }};
      font-weight: {{ section.settings.heading_font.weight }};
    {% endif %}
    font-size: {{ section.settings.heading_font_size }}px;
    margin-bottom: 15px;
    font-weight: bold;
  }
{%- endstyle -%}

<div class="pc-section-padding">
  {%- if section.settings.heading != blank -%}
    <h2 class="pc-section-heading">
      {{ section.settings.heading }}
    </h2>
  {%- endif -%}

  <div class="pc-video-grid">
    {%- for block in section.blocks -%}
      <div class="pc-video-grid-item" {{ block.shopify_attributes }}>
        <div class="pc-video-wrapper">
          {%- if block.settings.video_url != blank and block.settings.video_url.type == 'youtube' -%}
            <iframe
              src="https://www.youtube.com/embed/{{ block.settings.video_url.id }}?rel=0&showinfo=0&autoplay={% if block.settings.autoplay %}1{% else %}0{% endif %}&mute={% if block.settings.muted %}1{% else %}0{% endif %}&loop={% if block.settings.loop %}1{% else %}0{% endif %}{% if block.settings.loop %}&playlist={{ block.settings.video_url.id }}{% endif %}"
              frameborder="0"
              allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
              allowfullscreen
            >
            </iframe>

          {%- elsif block.settings.video_url != blank and block.settings.video_url.type == 'vimeo' -%}
            <iframe
              src="https://player.vimeo.com/video/{{ block.settings.video_url.id }}?autoplay={% if block.settings.autoplay %}1{% else %}0{% endif %}&muted={% if block.settings.muted %}1{% else %}0{% endif %}&loop={% if block.settings.loop %}1{% else %}0{% endif %}&color={{ settings.color_button_text | remove: '#' }}&title=0&byline=0&portrait=0"
              frameborder="0"
              allow="autoplay; fullscreen"
              allowfullscreen
            >
            </iframe>

          {%- elsif block.settings.video_upload != blank -%}
            <video
              {% if block.settings.autoplay %}
                autoplay
              {% endif %}
              {% if block.settings.muted %}
                muted
              {% endif %}
              {% if block.settings.loop %}
                loop
              {% endif %}
              playsinline
              {% if block.settings.cover_image %}
                poster="{{ block.settings.cover_image | img_url: '800x' }}"
              {% endif %}
              controls
            >
              <source
                src="{{ block.settings.video_upload.sources[1].url }}"
                type="{{ block.settings.video_upload.sources[1].mime_type }}"
              >
              Your browser does not support the video tag.
            </video>

          {%- else -%}
            <div class="pc-video-placeholder">
              {{ 'product-1' | placeholder_svg_tag: 'placeholder-svg' }}
              <span style="position: absolute;">No video selected</span>
            </div>
          {%- endif -%}
        </div>

        {%- if block.settings.heading != blank -%}
          <h3 class="pc-video-grid-item__heading">{{ block.settings.heading }}</h3>
        {%- endif -%}

        {%- if block.settings.text != blank -%}
          <div class="pc-video-grid-item__text">{{ block.settings.text }}</div>
        {%- endif -%}

        {%- if block.settings.button_label != blank -%}
          <a
            href="{{ block.settings.button_link }}"
            class="button"
            style="background-color: {{ block.settings.button_bg_color }}; color: {{ block.settings.button_text_color }};"
          >
            {{ block.settings.button_label }}
          </a>
        {%- endif -%}
      </div>
    {%- endfor -%}
  </div>

  {% if section.settings.enable_mobile_slider %}
    <div class="pc-video-slider">
      <div class="pc-video-slider-container">
        {%- for block in section.blocks -%}
          <div class="pc-video-slide">
            <div class="pc-video-grid-item" {{ block.shopify_attributes }}>
              <div class="pc-video-wrapper">
                {%- if block.settings.video_url != blank and block.settings.video_url.type == 'youtube' -%}
                  <iframe
                    src="https://www.youtube.com/embed/{{ block.settings.video_url.id }}?rel=0&showinfo=0&autoplay={% if block.settings.autoplay %}1{% else %}0{% endif %}&mute={% if block.settings.muted %}1{% else %}0{% endif %}&loop={% if block.settings.loop %}1{% else %}0{% endif %}{% if block.settings.loop %}&playlist={{ block.settings.video_url.id }}{% endif %}"
                    frameborder="0"
                    allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
                    allowfullscreen
                  >
                  </iframe>

                {%- elsif block.settings.video_url != blank and block.settings.video_url.type == 'vimeo' -%}
                  <iframe
                    src="https://player.vimeo.com/video/{{ block.settings.video_url.id }}?autoplay={% if block.settings.autoplay %}1{% else %}0{% endif %}&muted={% if block.settings.muted %}1{% else %}0{% endif %}&loop={% if block.settings.loop %}1{% else %}0{% endif %}&color={{ settings.color_button_text | remove: '#' }}&title=0&byline=0&portrait=0"
                    frameborder="0"
                    allow="autoplay; fullscreen"
                    allowfullscreen
                  >
                  </iframe>

                {%- elsif block.settings.video_upload != blank -%}
                  <video
                    {% if block.settings.autoplay %}
                      autoplay
                    {% endif %}
                    {% if block.settings.muted %}
                      muted
                    {% endif %}
                    {% if block.settings.loop %}
                      loop
                    {% endif %}
                    playsinline
                    {% if block.settings.cover_image %}
                      poster="{{ block.settings.cover_image | img_url: '800x' }}"
                    {% endif %}
                    controls
                  >
                    <source
                      src="{{ block.settings.video_upload.sources[1].url }}"
                      type="{{ block.settings.video_upload.sources[1].mime_type }}"
                    >
                    Your browser does not support the video tag.
                  </video>

                {%- else -%}
                  <div class="pc-video-placeholder">
                    {{ 'product-1' | placeholder_svg_tag: 'placeholder-svg' }}
                    <span style="position: absolute;">No video selected</span>
                  </div>
                {%- endif -%}
              </div>

              {%- if block.settings.heading != blank -%}
                <h3 class="pc-video-grid-item__heading">{{ block.settings.heading }}</h3>
              {%- endif -%}

              {%- if block.settings.text != blank -%}
                <div class="pc-video-grid-item__text">{{ block.settings.text }}</div>
              {%- endif -%}

              {%- if block.settings.button_label != blank -%}
                <a
                  href="{{ block.settings.button_link }}"
                  class="button"
                  style="background-color: {{ block.settings.button_bg_color }}; color: {{ block.settings.button_text_color }};"
                >
                  {{ block.settings.button_label }}
                </a>
              {%- endif -%}
            </div>
          </div>
        {%- endfor -%}
      </div>

      <div class="pc-slider-nav">
        <button class="pc-slider-arrow pc-slider-prev" aria-label="Previous slide">
          <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor">
            <path d="M15.41 16.59L10.83 12l4.58-4.59L14 6l-6 6 6 6 1.41-1.41z"/>
          </svg>
        </button>
        <button class="pc-slider-arrow pc-slider-next" aria-label="Next slide">
          <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor">
            <path d="M8.59 16.59L13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z"/>
          </svg>
        </button>
      </div>

      <div class="pc-slider-dots">
        {%- for block in section.blocks -%}
          <div class="pc-slider-dot {% if forloop.first %}active{% endif %}" data-index="{{ forloop.index0 }}"></div>
        {%- endfor -%}
      </div>
    </div>
  {% endif %}
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    {% if section.settings.enable_mobile_slider %}
      const slider = document.querySelector('{{ sid }} .pc-video-slider-container');
      const dots = document.querySelectorAll('{{ sid }} .pc-slider-dot');
      const slides = document.querySelectorAll('{{ sid }} .pc-video-slide');
      const prevBtn = document.querySelector('{{ sid }} .pc-slider-prev');
      const nextBtn = document.querySelector('{{ sid }} .pc-slider-next');
      let currentIndex = 0;
      let slideInterval;
      const slideDuration = {{ section.settings.slide_duration | default: 5000 }};

      function goToSlide(index) {
        if (index < 0) index = slides.length - 1;
        if (index >= slides.length) index = 0;
        
        slider.style.transform = `translateX(-${index * 100}%)`;
        currentIndex = index;
        
        // Update dots
        dots.forEach(dot => dot.classList.remove('active'));
        dots[index].classList.add('active');
      }

      function startSlider() {
        slideInterval = setInterval(() => {
          goToSlide(currentIndex + 1);
        }, slideDuration);
      }

      function stopSlider() {
        clearInterval(slideInterval);
      }

      // Initialize slider
      goToSlide(0);
      startSlider();

      // Arrow click events
      prevBtn.addEventListener('click', function() {
        goToSlide(currentIndex - 1);
        stopSlider();
        startSlider();
      });

      nextBtn.addEventListener('click', function() {
        goToSlide(currentIndex + 1);
        stopSlider();
        startSlider();
      });

      // Dot click events
      dots.forEach(dot => {
        dot.addEventListener('click', function() {
          const index = parseInt(this.getAttribute('data-index'));
          goToSlide(index);
          stopSlider();
          startSlider();
        });
      });

      // Pause on hover
      slider.addEventListener('mouseenter', stopSlider);
      slider.addEventListener('mouseleave', startSlider);
      
      // Touch events for mobile swipe
      let touchStartX = 0;
      let touchEndX = 0;
      
      slider.addEventListener('touchstart', (e) => {
        touchStartX = e.changedTouches[0].screenX;
        stopSlider();
      }, {passive: true});
      
      slider.addEventListener('touchend', (e) => {
        touchEndX = e.changedTouches[0].screenX;
        handleSwipe();
        startSlider();
      }, {passive: true});
      
      function handleSwipe() {
        if (touchEndX < touchStartX - 50) {
          // Swipe left - next slide
          goToSlide(currentIndex + 1);
        } else if (touchEndX > touchStartX + 50) {
          // Swipe right - previous slide
          goToSlide(currentIndex - 1);
        }
      }
    {% endif %}
  });
</script>
{% schema %}
{
  "name": "Pwc Video Grid",
  "tag": "section",
  "class": "section",
  "settings": [
    {
      "type": "text",
      "id": "heading",
      "label": "Section Heading",
      "default": "Video Gallery"
    },
    {
      "type": "font_picker",
      "id": "heading_font",
      "label": "Heading Font",
      "default": "helvetica_n4"
    },
    {
      "type": "font_picker",
      "id": "video_font",
      "label": "Heading Font",
      "default": "helvetica_n4"
    },
    {
      "type": "font_picker",
      "id": "countdown_font",
      "label": "Text Font",
      "default": "helvetica_n4"
    },
    {
      "type": "range",
      "id": "section_heading_size",
      "min": 12,
      "max": 60,
      "step": 1,
      "unit": "px",
      "label": "Section Heading Size",
      "default": 30
    },
    {
      "type": "range",
      "id": "heading_spacing",
      "min": 0,
      "max": 50,
      "step": 1,
      "unit": "px",
      "label": "Heading Bottom Spacing",
      "default": 20
    },
    {
      "type": "select",
      "id": "heading_alignment",
      "label": "Section Heading Alignment",
      "options": [
        {
          "value": "left",
          "label": "Left"
        },
        {
          "value": "center",
          "label": "Center"
        },
        {
          "value": "right",
          "label": "Right"
        }
      ],
      "default": "center"
    },
    {
      "type": "color",
      "id": "heading_color_sv",
      "label": "Section Heading Color",
      "default": "#000000"
    },
    {
      "type": "range",
      "id": "container_width",
      "min": 800,
      "max": 1800,
      "step": 50,
      "unit": "px",
      "label": "Container Width",
      "default": 1200
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Padding Top",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Padding Bottom",
      "default": 36
    },
    {
      "type": "color",
      "id": "background_color",
      "label": "Background Color",
      "default": "#ffffff"
    },
    {
      "type": "range",
      "id": "columns_desktop",
      "min": 1,
      "max": 6,
      "step": 1,
      "label": "Columns on Desktop",
      "default": 3
    },
    {
      "type": "range",
      "id": "columns_mobile",
      "min": 1,
      "max": 3,
      "step": 1,
      "label": "Columns on Mobile",
      "default": 1
    },
    {
      "type": "range",
      "id": "grid_gap",
      "min": 0,
      "max": 50,
      "step": 1,
      "unit": "px",
      "label": "Grid Gap",
      "default": 20
    },
    {
      "type": "select",
      "id": "text_alignment",
      "label": "Text Alignment",
      "options": [
        {
          "value": "left",
          "label": "Left"
        },
        {
          "value": "center",
          "label": "Center"
        },
        {
          "value": "right",
          "label": "Right"
        }
      ],
      "default": "center"
    },
    {
      "type": "range",
      "id": "heading_font_size",
      "min": 12,
      "max": 36,
      "step": 1,
      "unit": "px",
      "label": "Video Heading Font Size",
      "default": 18
    },
    {
      "type": "color",
      "id": "heading_color",
      "label": "Video Heading Color",
      "default": "#000000"
    },
    {
      "type": "range",
      "id": "text_font_size",
      "min": 12,
      "max": 24,
      "step": 1,
      "unit": "px",
      "label": "Video Text Font Size",
      "default": 14
    },
    {
      "type": "color",
      "id": "text_color",
      "label": "Video Text Color",
      "default": "#333333"
    },
    {
      "type": "range",
      "id": "video_border_radius",
      "min": 0,
      "max": 50,
      "step": 1,
      "unit": "px",
      "label": "Video Border Radius",
      "default": 0
    },
    {
      "type": "header",
      "content": "Mobile Slider Settings"
    },
    {
      "type": "checkbox",
      "id": "enable_mobile_slider",
      "label": "Enable Mobile Slider",
      "default": true,
      "info": "Show videos as slider on mobile devices"
    },
    {
      "type": "range",
      "id": "slide_duration",
      "min": 1000,
      "max": 8000,
      "step": 500,
      "unit": "ms",
      "label": "Auto Slide Duration",
      "default": 5000,
      "info": "Time between slides in milliseconds"
    }
  ],
  "blocks": [
    {
      "type": "video",
      "name": "Video Item",
      "settings": [
        {
          "type": "video_url",
          "id": "video_url",
          "label": "Video URL (YouTube/Vimeo)",
          "accept": ["youtube", "vimeo"],
          "default": "https://www.youtube.com/watch?v=_9VUPq3SxOc",
          "info": "Enter YouTube or Vimeo link"
        },
        {
          "type": "video",
          "id": "video_upload",
          "label": "Upload MP4 Video",
          "info": "Upload your own MP4 video file"
        },
        {
          "type": "header",
          "content": "Video Settings"
        },
        {
          "type": "checkbox",
          "id": "autoplay",
          "label": "Autoplay",
          "default": false,
          "info": "Note: Most browsers require muted for autoplay"
        },
        {
          "type": "checkbox",
          "id": "loop",
          "label": "Loop",
          "default": false
        },
        {
          "type": "checkbox",
          "id": "muted",
          "label": "Muted",
          "default": true,
          "info": "Recommended for autoplay"
        },
        {
          "type": "header",
          "content": "Content"
        },
        {
          "type": "text",
          "id": "heading",
          "label": "Heading",
          "default": "Video Title"
        },
        {
          "type": "richtext",
          "id": "text",
          "label": "Text",
          "default": "<p>Describe your video content here.</p>"
        },
        {
          "type": "text",
          "id": "button_label",
          "label": "Button Label"
        },
        {
          "type": "url",
          "id": "button_link",
          "label": "Button Link"
        },
        {
          "type": "color",
          "id": "button_bg_color",
          "label": "Button Background Color",
          "default": "#000000"
        },
        {
          "type": "color",
          "id": "button_text_color",
          "label": "Button Text Color",
          "default": "#ffffff"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Pwc Video Grid",
      "blocks": [
        {
          "type": "video",
          "settings": {
            "video_url": "https://www.youtube.com/watch?v=_9VUPq3SxOc",
            "heading": "YouTube Video",
            "text": "<p>Example YouTube video</p>"
          }
        },
        {
          "type": "video",
          "settings": {
            "heading": "MP4 Video",
            "text": "<p>Example uploaded MP4 video</p>"
          }
        },
        {
          "type": "video",
          "settings": {
            "video_url": "https://vimeo.com/148751763",
            "heading": "Vimeo Video",
            "text": "<p>Example Vimeo video</p>"
          }
        }
      ]
    }
  ]
}
{% endschema %}
