{%- assign sid = '#shopify-section-' | append: section.id -%}

<style>
  {{ sid }} {
    {% if section.settings.background_image != blank %}
      background-image: url('{{ section.settings.background_image | img_url: '2000x' }}');
      background-size: cover;
      background-position: center;
      {% if section.settings.enable_parallax %}
        background-attachment: fixed;
      {% endif %}
    {% endif %}
    {% if section.settings.background_color != blank %}
      background-color: {{ section.settings.background_color }};
    {% endif %}
    padding: {{ section.settings.section_padding }}px 0;
    position: relative;
  }

  {{ sid }} .pc_circle_icon {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: {{ section.settings.desktop_gap }}px;
    flex-wrap: nowrap;
    overflow-x: auto;
    position: relative;
    z-index: 2;
    padding: 10px 0;
    scroll-behavior: smooth;
    -webkit-overflow-scrolling: touch;
    scrollbar-width: none; /* Hide scrollbar for Firefox */
  }

  {{ sid }} .pc_circle_icon::-webkit-scrollbar {
    display: none; /* Hide scrollbar for Chrome/Safari */
  }

  {{ sid }} .pc_circle_img img {
    border-radius: 100%;
    width: {{ section.settings.image_width | default: '80' }}px;
    height: {{ section.settings.image_height | default: '80' }}px;
    object-fit: cover;
    transition: transform 0.3s ease;
  }

  {{ sid }} .pc_circle_img:hover img {
    transform: scale(1.05);
  }

  {{ sid }} .pc_circle_img {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    text-align: center;
    min-width: calc({{ section.settings.image_width | default: '80' }}px + 20px);
    flex-shrink: 0;
  }

  {{ sid }} .pc_collection_title {
    font-size: {{ section.settings.text_size }}px;
    font-weight: {{ section.settings.text_weight }};
    margin-top: {{ section.settings.text_margin_top }}px;
    color: {{ section.settings.text_color }};
    white-space: nowrap;
  }

  {{ sid }} .pc_custom_image_above_text {
    width: {{ section.settings.image_width | default: '80' }}px;
    height: {{ section.settings.image_height | default: '80' }}px;
    object-fit: cover;
    border-radius: 100%;
    margin-bottom: 8px;
  }

  /* Navigation arrows */
  {{ sid }} .pc_navigation_arrow {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    width: 40px;
    height: 40px;
    background: {{ section.settings.arrow_background }};
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    z-index: 3;
    box-shadow: 0 2px 5px rgba(0,0,0,0.1);
    opacity: 0.8;
    transition: opacity 0.3s ease;
  }

  {{ sid }} .pc_navigation_arrow:hover {
    opacity: 1;
  }

  {{ sid }} .pc_navigation_arrow svg {
    width: 20px;
    height: 20px;
    fill: {{ section.settings.arrow_color }};
  }

  {{ sid }} .pc_arrow_left {
    left: 10px;
  }

  {{ sid }} .pc_arrow_right {
    right: 10px;
  }

  /* Hide arrows when not needed */
  {{ sid }} .pc_navigation_arrow.pc_hidden {
    display: none;
  }

  @media only screen and (max-width: 768px) {
    {{ sid }} {
      {% if section.settings.mobile_disable_parallax %}
        background-attachment: scroll !important;
      {% endif %}
      padding: {{ section.settings.mobile_section_padding }}px 0;
    }
    
    {{ sid }} .pc_circle_img img {
      width: {{ section.settings.mobile_image_width | default: '60' }}px;
      height: {{ section.settings.mobile_image_height | default: '60' }}px;
    }
    
    {{ sid }} .pc_circle_icon {
      gap: {{ section.settings.mobile_gap }}px !important;
      justify-content: {{ section.settings.mobile_alignment }} !important;
      padding: {{ section.settings.mobile_scroll_padding }}px 0;
    }
    
    {{ sid }} .pc_circle_img {
      min-width: calc({{ section.settings.mobile_image_width | default: '60' }}px + 10px);
    }
    
    {{ sid }} .pc_collection_title {
      font-size: {{ section.settings.mobile_text_size }}px;
      margin-top: {{ section.settings.mobile_text_margin_top }}px;
    }
    
    {% if section.settings.hide_text_mobile %}
      {{ sid }} .pc_collection_title {
        display: none;
      }
    {% endif %}
    
    /* Adjust arrow size and position for mobile */
    {{ sid }} .pc_navigation_arrow {
      width: 40px;
      height: 40px;
    }
    
    {{ sid }} .pc_navigation_arrow svg {
      width: 15px;
      height: 15px;
    }
    
    {{ sid }} .pc_arrow_left {
      left: 9px;
    }
    
    {{ sid }} .pc_arrow_right {
      right: 9px;
    }
  }
</style>

<div class="pwc_icon_circle_parent pwc_icon_circle-{{ section.id }}">
  {% if section.settings.is_icon_enable %}
    <div class="pc_circle_icon_wrapper">
      <div class="pc_navigation_arrow pc_arrow_left pc_hidden">
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
          <path d="M15.41 16.59L10.83 12l4.58-4.59L14 6l-6 6 6 6 1.41-1.41z"/>
        </svg>
      </div>
      
      <div class="pc_circle_icon page-width" id="circle-collection-{{ section.id }}">
        {% for block in section.blocks %}
          {% assign _circle_collection = block.settings.circle_collection %}
          {% assign _collections = collections[_circle_collection] %}
          <div class="pc_circle_img">
            <a href="{{ _collections.url }}">
              {% if block.settings.custom_image != blank %}
                <img
                  class="pc_custom_image_above_text"
                  src="{{ block.settings.custom_image | img_url: '200x200' }}"
                  alt="{{ block.settings.cutome_title_circle | default: _collections.title }}"
                  loading="lazy"
                >
              {% else %}
                <img 
                  src="{{ _collections.featured_image | img_url: '200x200' }}" 
                  alt="{{ _collections.title }}"
                  loading="lazy"
                >
              {% endif %}
            </a>
            <span class="pc_collection_title">
              {% unless block.settings.cutome_title_circle == blank %}
                {{ block.settings.cutome_title_circle }}
              {% else %}
                {{ _collections.title }}
              {% endunless %}
            </span>
          </div>
        {% endfor %}
      </div>
      
      <div class="pc_navigation_arrow pc_arrow_right">
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
          <path d="M8.59 16.59L13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z"/>
        </svg>
      </div>
    </div>
  {% endif %}
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const sectionId = 'circle-collection-{{ section.id }}';
  const scrollContainer = document.getElementById(sectionId);
  const leftArrow = document.querySelector('{{ sid }} .pc_arrow_left');
  const rightArrow = document.querySelector('{{ sid }} .pc_arrow_right');
  
  if (!scrollContainer) return;
  
  // Check if arrows are needed
  function checkArrows() {
    const containerWidth = scrollContainer.clientWidth;
    const contentWidth = scrollContainer.scrollWidth;
    
    if (contentWidth <= containerWidth) {
      leftArrow.classList.add('pc_hidden');
      rightArrow.classList.add('pc_hidden');
    } else {
      leftArrow.classList.remove('pc_hidden');
      rightArrow.classList.remove('pc_hidden');
      updateArrowVisibility();
    }
  }
  
  // Update arrow visibility based on scroll position
  function updateArrowVisibility() {
    const scrollLeft = scrollContainer.scrollLeft;
    const maxScroll = scrollContainer.scrollWidth - scrollContainer.clientWidth;
    
    if (scrollLeft <= 10) {
      leftArrow.classList.add('pc_hidden');
    } else {
      leftArrow.classList.remove('pc_hidden');
    }
    
    if (scrollLeft >= maxScroll - 10) {
      rightArrow.classList.add('pc_hidden');
    } else {
      rightArrow.classList.remove('pc_hidden');
    }
  }
  
  // Scroll functions
  function scrollLeft() {
    scrollContainer.scrollBy({
      left: -scrollContainer.clientWidth * 0.7,
      behavior: 'smooth'
    });
  }
  
  function scrollRight() {
    scrollContainer.scrollBy({
      left: scrollContainer.clientWidth * 0.7,
      behavior: 'smooth'
    });
  }
  
  // Event listeners
  leftArrow.addEventListener('click', scrollLeft);
  rightArrow.addEventListener('click', scrollRight);
  
  scrollContainer.addEventListener('scroll', updateArrowVisibility);
  window.addEventListener('resize', checkArrows);
  
  // Initialize
  checkArrows();
  
  // Touch event for mobile swipe
  let touchStartX = 0;
  let touchEndX = 0;
  
  scrollContainer.addEventListener('touchstart', (e) => {
    touchStartX = e.changedTouches[0].screenX;
  }, {passive: true});
  
  scrollContainer.addEventListener('touchend', (e) => {
    touchEndX = e.changedTouches[0].screenX;
    handleSwipe();
  }, {passive: true});
  
  function handleSwipe() {
    const difference = touchStartX - touchEndX;
    if (difference > 50) { // Swipe left
      scrollRight();
    } else if (difference < -50) { // Swipe right
      scrollLeft();
    }
  }
});
</script>

{% schema %}
{
  "name": "PWC Circle Collection",
  "settings": [
    {
      "type": "text",
      "label": "Title",
      "id": "icon_title"
    },
    {
      "type": "checkbox",
      "label": "Enable Circle Icon",
      "id": "is_icon_enable",
      "default": true
    },
    {
      "type": "header",
      "content": "Background Settings"
    },
    {
      "type": "color",
      "label": "Background Color",
      "id": "background_color"
    },
    {
      "type": "image_picker",
      "label": "Background Image",
      "id": "background_image"
    },
    {
      "type": "checkbox",
      "label": "Enable Parallax Effect",
      "id": "enable_parallax",
      "default": false
    },
    {
      "type": "checkbox",
      "label": "Disable Parallax on Mobile",
      "id": "mobile_disable_parallax",
      "default": true
    },
    {
      "type": "header",
      "content": "Desktop Settings"
    },
    {
      "type": "range",
      "label": "Image Width (px)",
      "id": "image_width",
      "min": 40,
      "max": 200,
      "step": 5,
      "default": 80,
      "unit": "px"
    },
    {
      "type": "range",
      "label": "Image Height (px)",
      "id": "image_height",
      "min": 40,
      "max": 200,
      "step": 5,
      "default": 80,
      "unit": "px"
    },
    {
      "type": "range",
      "label": "Gap Between Items (px)",
      "id": "desktop_gap",
      "min": 10,
      "max": 100,
      "step": 5,
      "default": 40,
      "unit": "px"
    },
    {
      "type": "header",
      "content": "Text Settings"
    },
    {
      "type": "color",
      "label": "Text Color",
      "id": "text_color",
      "default": "#000000"
    },
    {
      "type": "range",
      "label": "Text Size (px)",
      "id": "text_size",
      "min": 10,
      "max": 24,
      "step": 1,
      "default": 12,
      "unit": "px"
    },
    {
      "type": "range",
      "label": "Text Margin Top (px)",
      "id": "text_margin_top",
      "min": 0,
      "max": 20,
      "step": 1,
      "default": 8,
      "unit": "px"
    },
    {
      "type": "select",
      "label": "Text Weight",
      "id": "text_weight",
      "options": [
        { "value": "400", "label": "Normal" },
        { "value": "600", "label": "Semi-bold" },
        { "value": "700", "label": "Bold" }
      ],
      "default": "600"
    },
    {
      "type": "header",
      "content": "Arrow Navigation Settings"
    },
    {
      "type": "color",
      "label": "Arrow Color",
      "id": "arrow_color",
      "default": "#000000"
    },
    {
      "type": "color",
      "label": "Arrow Background",
      "id": "arrow_background",
      "default": "#ffffff"
    },
    {
      "type": "header",
      "content": "Mobile Settings"
    },
    {
      "type": "range",
      "label": "Mobile Image Width (px)",
      "id": "mobile_image_width",
      "min": 30,
      "max": 120,
      "step": 5,
      "default": 60,
      "unit": "px"
    },
    {
      "type": "range",
      "label": "Mobile Image Height (px)",
      "id": "mobile_image_height",
      "min": 30,
      "max": 120,
      "step": 5,
      "default": 60,
      "unit": "px"
    },
    {
      "type": "range",
      "label": "Mobile Gap Between Items (px)",
      "id": "mobile_gap",
      "min": 5,
      "max": 40,
      "step": 1,
      "default": 13,
      "unit": "px"
    },
    {
      "type": "select",
      "label": "Mobile Alignment",
      "id": "mobile_alignment",
      "options": [
        { "value": "flex-start", "label": "Left" },
        { "value": "center", "label": "Center" }
      ],
      "default": "flex-start",
      "info": "How items align on mobile"
    },
    {
      "type": "range",
      "label": "Mobile Text Size (px)",
      "id": "mobile_text_size",
      "min": 8,
      "max": 18,
      "step": 1,
      "default": 10,
      "unit": "px"
    },
    {
      "type": "range",
      "label": "Mobile Text Margin Top (px)",
      "id": "mobile_text_margin_top",
      "min": 0,
      "max": 15,
      "step": 1,
      "default": 5,
      "unit": "px"
    },
    {
      "type": "checkbox",
      "label": "Hide Text on Mobile",
      "id": "hide_text_mobile",
      "default": false
    },
    {
      "type": "range",
      "label": "Mobile Scroll Padding (px)",
      "id": "mobile_scroll_padding",
      "min": 0,
      "max": 20,
      "step": 1,
      "default": 5,
      "unit": "px",
      "info": "Padding around scrollable area on mobile"
    },
    {
      "type": "header",
      "content": "Spacing"
    },
    {
      "type": "range",
      "label": "Section Padding (Desktop)",
      "id": "section_padding",
      "min": 0,
      "max": 100,
      "step": 5,
      "default": 30,
      "unit": "px"
    },
    {
      "type": "range",
      "label": "Section Padding (Mobile)",
      "id": "mobile_section_padding",
      "min": 0,
      "max": 50,
      "step": 5,
      "default": 15,
      "unit": "px"
    }
  ],
  "blocks": [
    {
      "type": "circle-icon",
      "name": "Circle Icon",
      "settings": [
        {
          "type": "collection",
          "label": "Select Collection",
          "id": "circle_collection"
        },
        {
          "type": "text",
          "label": "Custom Collection Name",
          "id": "cutome_title_circle"
        },
        {
          "type": "image_picker",
          "label": "Custom Image (Optional)",
          "id": "custom_image",
          "info": "Upload an image to display above the text instead of the collection image."
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "PWC Circle Collection",
      "blocks": [
        {
          "type": "circle-icon"
        },
        {
          "type": "circle-icon"
        },
        {
          "type": "circle-icon"
        },
        {
          "type": "circle-icon"
        }
      ]
    }
  ]
}
{% endschema %}