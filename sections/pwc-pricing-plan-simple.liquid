{%- assign sid = '#shopify-section-' | append: section.id -%}
{%- assign padding_top = section.settings.section_padding_top -%}
{%- assign padding_bottom = section.settings.section_padding_bottom -%}

{% style %}
  {{ sid }} .pc-pricing-section {
    padding-top: {{ padding_top }}px;
    padding-bottom: {{ padding_bottom }}px;
    position: relative;
  }

  {{ sid }} .pc-section-title {
    text-align: {{ section.settings.title_alignment }};
    margin-bottom: 40px;
    font-weight: 600;
    font-size: 2rem;
  }

  {{ sid }} .pc-pricing-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: {{ section.settings.card_spacing }}px;
    max-width: 1200px;
    margin: 0 auto;
  }

  {{ sid }} .pc-pricing-carousel {
    display: none;
    max-width: 400px;
    margin: 0 auto;
    position: relative;
  }

  {{ sid }} .pc-pricing-card {
    background: {{ section.settings.card_bg_color }};
    border: {{ section.settings.card_border_width }}px solid {{ section.settings.card_border_color }};
    border-radius: {{ section.settings.card_border_radius }}px;
    padding: {{ section.settings.card_padding }}px;
    transition: transform 0.3s ease, box-shadow 0.3s ease;
    position: relative;
    backdrop-filter: blur(8px);
    margin: 0 10px;
  }

  {{ sid }} .pc-pricing-card.featured {
    border-color: rgba(255, 255, 255, 0.3);
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.15);
    transform: translateY(-10px);
  }

  {{ sid }} .pc-pricing-card-title {
    font-size: 1.5rem;
    font-weight: 600;
    margin-bottom: 15px;
  }

  {{ sid }} .pc-pricing-amount {
    font-size: 3rem;
    font-weight: 700;
    line-height: 1;
    margin: 10px 0;
  }

  {{ sid }} .pc-pricing-period {
    font-size: 1rem;
    opacity: 0.8;
  }

  {{ sid }} .pc-pricing-savings {
    font-size: 0.9rem;
    opacity: 0.8;
    margin-bottom: 20px;
  }

  {{ sid }} .pc-pricing-features {
    margin: 25px 0;
    padding: 0;
    list-style: none;
  }

  {{ sid }} .pc-pricing-features li {
    padding: 8px 0;
    position: relative;
    padding-left: 25px;
  }

  {{ sid }} .pc-pricing-features li:before {
    content: "✓";
    position: absolute;
    left: 0;
    color: #4CAF50;
  }

  {{ sid }} .pc-pricing-button {
    display: block;
    width: 100%;
    padding: 12px;
    text-align: center;
    background: {{ section.settings.button_bg_color }};
    color: {{ section.settings.button_text_color }};
    border-radius: {{ section.settings.button_border_radius }}px;
    text-decoration: none;
    font-weight: 500;
    transition: all 0.3s ease;
    border: none;
    cursor: pointer;
  }

  {{ sid }} .pc-pricing-button:hover {
    background: {{ section.settings.button_hover_bg }};
    transform: translateY(-2px);
  }

  /* Carousel styles */
  {{ sid }} .pc-carousel-container {
    overflow: hidden;
    position: relative;
  }

  {{ sid }} .pc-carousel-track {
    display: flex;
    transition: transform 0.5s ease;
  }

  {{ sid }} .pc-carousel-dots {
    display: flex;
    justify-content: center;
    margin-top: 20px;
  }

  {{ sid }} .pc-carousel-dot {
    width: 10px;
    height: 10px;
    border-radius: 50%;
    background: rgba(255, 255, 255, 0.5);
    margin: 0 5px;
    cursor: pointer;
  }

  {{ sid }} .pc-carousel-dot.active {
    background: white;
  }

  {{ sid }} .pc-carousel-arrow {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    width: 40px;
    height: 40px;
    background: rgba(255, 255, 255, 0.2);
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    z-index: 1;
    border: none;
    color: white;
    font-size: 20px;
  }

  {{ sid }} .pc-carousel-arrow.prev {
    left: 10px;
  }

  {{ sid }} .pc-carousel-arrow.next {
    right: 10px;
  }

  @media (max-width: 768px) {
    {{ sid }} .pc-pricing-grid {
      display: none;
    }

    {{ sid }} .pc-pricing-carousel {
      display: block;
    }

    {{ sid }} .pc-pricing-card.featured {
      transform: none;
    }
  }
{% endstyle %}

<div class="pc-pricing-section">
  <div class="page-width">
    {% if section.settings.show_section_title %}
      <h2 class="pc-section-title">{{ section.settings.title }}</h2>
    {% endif %}

    <!-- Desktop Grid View -->
    <div class="pc-pricing-grid">
      {% for block in section.blocks %}
        <div class="pc-pricing-card {% if block.settings.featured %}featured{% endif %}" {{ block.shopify_attributes }}>
          <h3 class="pc-pricing-card-title">{{ block.settings.title }}</h3>
          <div class="pc-pricing-amount">
            {{ block.settings.price -}}
            {{- block.settings.price_unit }}
          </div>
          <div class="pc-pricing-period">{{ block.settings.billing_period }}</div>

          {% if block.settings.savings_text != blank %}
            <div class="pc-pricing-savings">{{ block.settings.savings_text }}</div>
          {% endif %}

          {% if block.settings.features != blank %}
            <ul class="pc-pricing-features">
              {% assign features = block.settings.features | newline_to_br | split: '<br />' %}
              {% for feature in features %}
                {% if feature != blank %}
                  <li>{{ feature }}</li>
                {% endif %}
              {% endfor %}
            </ul>
          {% endif %}

          <a href="{{ block.settings.button_link | default: '#' }}" class="pc-pricing-button">
            {{ block.settings.button_text | default: 'Get Started' }}
          </a>
        </div>
      {% endfor %}
    </div>

    <!-- Mobile Carousel View -->
    <div class="pc-pricing-carousel">
      <div class="pc-carousel-container">
        <div class="pc-carousel-track">
          {% for block in section.blocks %}
            <div
              class="pc-pricing-card {% if block.settings.featured %}featured{% endif %}"
              {{ block.shopify_attributes }}
            >
              <h3 class="pc-pricing-card-title">{{ block.settings.title }}</h3>
              <div class="pc-pricing-amount">
                {{ block.settings.price -}}
                {{- block.settings.price_unit }}
              </div>
              <div class="pc-pricing-period">{{ block.settings.billing_period }}</div>

              {% if block.settings.savings_text != blank %}
                <div class="pc-pricing-savings">{{ block.settings.savings_text }}</div>
              {% endif %}

              {% if block.settings.features != blank %}
                <ul class="pc-pricing-features">
                  {% assign features = block.settings.features | newline_to_br | split: '<br />' %}
                  {% for feature in features %}
                    {% if feature != blank %}
                      <li>{{ feature }}</li>
                    {% endif %}
                  {% endfor %}
                </ul>
              {% endif %}

              <a href="{{ block.settings.button_link | default: '#' }}" class="pc-pricing-button">
                {{ block.settings.button_text | default: 'Get Started' }}
              </a>
            </div>
          {% endfor %}
        </div>
        <button class="pc-carousel-arrow prev">❮</button>
        <button class="pc-carousel-arrow next">❯</button>
      </div>
      <div class="pc-carousel-dots">
        {% for block in section.blocks %}
          <div class="pc-carousel-dot {% if forloop.first %}active{% endif %}" data-index="{{ forloop.index0 }}"></div>
        {% endfor %}
      </div>
    </div>
  </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
  // Only initialize carousel on mobile
  if (window.innerWidth <= 768) {
    const carouselContainer = document.querySelector('{{ sid }} .pc-carousel-container');
    const carouselTrack = document.querySelector('{{ sid }} .pc-carousel-track');
    const cards = document.querySelectorAll('{{ sid }} .pc-carousel-track .pc-pricing-card');
    const dots = document.querySelectorAll('{{ sid }} .pc-carousel-dot');
    const prevBtn = document.querySelector('{{ sid }} .pc-carousel-arrow.prev');
    const nextBtn = document.querySelector('{{ sid }} .pc-carousel-arrow.next');
    
    let currentIndex = 0;
    const cardWidth = cards[0].offsetWidth + 20; // width + margin
    
    function updateCarousel() {
      carouselTrack.style.transform = `translateX(-${currentIndex * cardWidth}px)`;
      
      // Update dots
      dots.forEach((dot, index) => {
        dot.classList.toggle('active', index === currentIndex);
      });
    }
    
    // Next button
    nextBtn.addEventListener('click', () => {
      if (currentIndex < cards.length - 1) {
        currentIndex++;
        updateCarousel();
      }
    });
    
    // Previous button
    prevBtn.addEventListener('click', () => {
      if (currentIndex > 0) {
        currentIndex--;
        updateCarousel();
      }
    });
    
    // Dot navigation
    dots.forEach((dot, index) => {
      dot.addEventListener('click', () => {
        currentIndex = index;
        updateCarousel();
      });
    });
    
    // Handle window resize
    window.addEventListener('resize', function() {
      if (window.innerWidth > 768) {
        // Reset carousel on desktop
        carouselTrack.style.transform = 'translateX(0)';
        currentIndex = 0;
        updateCarousel();
      }
    });
  }
});
</script>
