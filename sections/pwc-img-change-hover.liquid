{{ 'mobile.css' | asset_url | stylesheet_tag }}
<div class="container1 section-{{ section.id }}-padding">
  <div class="text-container-left">
    {% for block in section.blocks limit: 4 %}
      <div class="inner-text-container" data-text-index="{{ forloop.index }}">{{ block.settings.heading }}</div>
    {% endfor %}
  </div>
  <div class="image-container">
    {% for block in section.blocks %}
      <div class="inner-image {% if forloop.first %} active {% endif %}" data-image-index="{{ forloop.index }}">
        {% if block.settings.image -%}
          <img src="{{ block.settings.image | img_url:"medium" }}">
        {%- else %}
          {{ 'product-apparel-1' | placeholder_svg_tag: 'placeholder-svg' }}
        {% endif %}
      </div>
    {% endfor %}
  </div>

  <div class="text-container-right">
    {% for block in section.blocks %}
      {% if forloop.index > 4 %}
        <div class="inner-text-container" data-text-index="{{ forloop.index }}">{{ block.settings.heading }}</div>
      {% endif %}
    {% endfor %}
  </div>

  <div class="text-container-mobile">
    {% for block in section.blocks %}
      <div class="inner-text-container {% if forloop.first %} active{% endif %}" data-text-index="{{ forloop.index }}">
        <span class="dot"></span>
      </div>
    {% endfor %}
  </div>
</div>

{% style %}
    /* Define the styles for the dots */
  .inner-text-container {
  	display:inline-block;
  	padding: 5px;
  	/* Adjust the padding to control the dot size */
  }
  /* Style the dots as small circles */
  .dot {
  	display:inline-block;
  	width:5px;
  	/* Adjust the width and height to control the dot size */
  	height:5px;
  	border-radius:50%;
  	background-color:black;
  	/* Default dot color */
  }
  svg.my-custom-class {
  	display:block;
  	width:400px;
  	height: 400px;
  }
  /* Change the dot color to red on hover */
  .inner-image {
  	display:none;
  }
  .inner-image.active {
  	display:block;
  }
  .text-container-right,.text-container-left {
  	display:flex;
  	flex-direction:column;
  	gap:4rem;
  	position:relative;
  }
  .inner-text-container {
  	cursor:pointer;
  	position:relative;
  	transition-property:scale;
  	transition-duration:.2s;
  	scale:1;
  }
  .inner-text-container.active span.dot {
  	background:#ffa05e;
  }
  .text-container-left .inner-text-container:before {
  	content:"";
  	position:absolute;
  	width:60px;
  	height:1px;
  	right:-80px;
  	background:#000;
  	top:10px;
  	z-index:999;
  }
  .text-container-right .inner-text-container:before {
  	content:"";
  	position:absolute;
  	width:60px;
  	height:1px;
  	left:-80px;
  	background:#000;
  	top:10px;
  	z-index:999;
  }
  .container1 {
  	display:flex;
  	justify-content:center;
  	align-items:center;
  	gap:10rem;
  }
  .inner-text-container:hover {
  	scale: 1.1;
  }
  .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
      padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
  }

  @media screen and (min-width: 750px) {
  .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom | times: 1.5 }}px;
  }
  .text-container-mobile {
              display: none;
  }
                  }
{% endstyle %}

{% javascript %}
  const textContainers = document.querySelectorAll('.inner-text-container');
  const textContainersMobile = document.querySelectorAll('.text-container-mobile .inner-text-container');
  const imageContainers = document.querySelectorAll('.inner-image');
  let activeImageIndex = 0;

  function handleHover(index) {
    const textIndex = textContainers[index].getAttribute('data-text-index');
    for (let i = 0; i < imageContainers.length; i++) {
      const imageIndex = imageContainers[i].getAttribute('data-image-index');
      if (textIndex === imageIndex) {
        imageContainers[i].classList.add('active');
        textContainersMobile[i].classList.add('active');
      } else {
        imageContainers[i].classList.remove('active');
        textContainersMobile[i].classList.remove('active');
      }
    }
    activeImageIndex = index;
  }

  function showImage(index) {
    if (index >= 0 && index < textContainers.length) {
      handleHover(index);
    }
  }

  for (let i = 0; i < textContainers.length; i++) {
    textContainers[i].addEventListener('mouseover', () => {
      handleHover(i);
    });

    textContainers[i].addEventListener('click', () => {
      textContainers.forEach((el) => {
        el.classList.remove('active');
      });
      handleHover(i);
      textContainers[i].classList.add('active');
    });
  }

  // Touch events for swipe gestures on image container
  let touchStartX = 0;
  let touchEndX = 0;

  document.querySelector('.image-container').addEventListener('touchstart', (event) => {
    touchStartX = event.touches[0].clientX;
  });

  document.querySelector('.image-container').addEventListener('touchend', (event) => {
    touchEndX = event.changedTouches[0].clientX;
    const deltaX = touchEndX - touchStartX;

    // Adjust the threshold value to control swipe sensitivity
    const threshold = 50;

    if (deltaX > threshold) {
      // Swipe right, show previous image
      showImage(activeImageIndex - 1);
    } else if (deltaX < -threshold) {
      // Swipe left, show next image
      showImage(activeImageIndex + 1);
    }
  });
{% endjavascript %}

{% schema %}
{
  "name": "On Hover Image Change",
  "settings": [
     {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 40
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 52
    }
  ],
   "blocks": [
      {
    "type": "heading",
    "name": "t:sections.image-banner.blocks.heading.name",
    "limit": 10,
    "settings": [
      {
        "type": "inline_richtext",
        "id": "heading",
        "default": "Image banner",
        "label": "t:sections.image-banner.blocks.heading.settings.heading.label"
      },
       {
    "type": "image_picker",
    "id": "image",
    "label": "t:sections.image-banner.settings.image.label"
  }]
      }],

"presets": [
  {
    "name": "On Hover Image Change",
    "blocks": [
      {
        "type": "heading"
      }
    ]
  }
]
}
{% endschema %}
