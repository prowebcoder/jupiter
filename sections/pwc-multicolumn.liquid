<style>
  .slider-container {
    position: relative;
    height: 100vh;
    user-select: none;
    cursor: all-scroll;
    overflow: hidden;
  }

  .slider-control {
    z-index: 2;
    position: absolute;
    top: 0;
    width: 12%;
    height: 100%;
    transition: opacity 0.3s;
    will-change: opacity;
    opacity: 0;
  }
  .slider-control.inactive:hover {
    cursor: auto;
  }
  .slider-control:not(.inactive):hover {
    opacity: 1;
    cursor: pointer;
  }
  .slider-control.left {
    left: 0;
    background: linear-gradient(to right, rgba(0, 0, 0, 0.18) 0%, transparent 100%);
  }
  .slider-control.right {
    right: 0;
    background: linear-gradient(to right, transparent 0%, rgba(0, 0, 0, 0.18) 100%);
  }

  .slider-pagi {
    position: absolute;
    z-index: 3;
    left: 50%;
    bottom: 2rem;
    transform: translateX(-50%);
    font-size: 0;
    list-style-type: none;
    padding: 0;
    margin: 0;
  }
  .slider-pagi__elem {
    position: relative;
    display: inline-block;
    vertical-align: top;
    width: 2rem;
    height: 2rem;
    margin: 0 0.5rem;
    border-radius: 50%;
    border: 2px solid #fff;
    cursor: pointer;
  }
  .slider-pagi__elem:before {
    content: "";
    position: absolute;
    left: 50%;
    top: 50%;
    width: 1.2rem;
    height: 1.2rem;
    background: #fff;
    border-radius: 50%;
    transition: transform 0.3s;
    transform: translate(-50%, -50%) scale(0);
  }
  .slider-pagi__elem.active:before, .slider-pagi__elem:hover:before {
    transform: translate(-50%, -50%) scale(1);
  }

  .slider {
    z-index: 1;
    position: relative;
    height: 100%;
    width: 100%;
    display: flex;
  }
  .slider.animating {
    transition: transform 0.5s;
  }
  .slider.animating .slide__bg {
    transition: transform 0.5s;
  }

  .slide {
    position: relative;
    min-width: 100%;
    height: 100%;
    overflow: hidden;
  }
  .slide.active .slide__overlay,
  .slide.active .slide__text {
    opacity: 1;
    transform: translateX(0);
  }
  .slide__bg {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-size: cover;
    background-position: center;
  }
  .slide__content {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }
  .slide__overlay {
    position: absolute;
    bottom: 0;
    left: 0;
    height: 100%;
    min-height: 810px;
    transition: transform 0.5s 0.5s, opacity 0.2s 0.5s;
    transform: translate3d(-20%, 0, 0);
    opacity: 0;
  }
  @media (max-width: 991px) {
    .slide__overlay {
      display: none;
    }
  }
  .slide__overlay path {
    opacity: 0.8;
  }
  .slide__text {
    position: absolute;
    width: 25%;
    bottom: 15%;
    left: 12%;
    color: #fff;
    transition: transform 0.5s 0.8s, opacity 0.5s 0.8s;
    transform: translateY(-50%);
    opacity: 0;
  }
  @media (max-width: 991px) {
    .slide__text {
      left: 0;
      bottom: 0;
      width: 100%;
      height: 20rem;
      text-align: center;
      transform: translateY(50%);
      transition: transform 0.5s 0.5s, opacity 0.5s 0.5s;
      padding: 0 1rem;
    }
  }
  .slide__text-heading {
    font-family: "Roboto", Helvetica, Arial, sans-serif;
    font-size: 5rem;
    margin-bottom: 2rem;
  }
  @media (max-width: 991px) {
    .slide__text-heading {
      line-height: 10rem;
      font-size: 3.5rem;
    }
  }
  .slide__text-desc {
    font-family: "Roboto", Helvetica, Arial, sans-serif;
    font-size: 1.8rem;
    margin-bottom: 1.5rem;
  }
  @media (max-width: 991px) {
    .slide__text-desc {
      display: none;
    }
  }
  .slide__text-link {
    z-index: 5;
    display: inline-block;
    position: relative;
    padding: 0.5rem;
    cursor: pointer;
    font-family: "Roboto", Helvetica, Arial, sans-serif;
    font-size: 2.3rem;
    color: #fff;
    text-decoration: none;
    perspective: 1000px;
  }
  @media (max-width: 991px) {
    .slide__text-link {
      margin: -2rem 0 8rem;
    }
  }
  .slide__text-link:before {
    z-index: -1;
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: #000;
    transform-origin: 50% 100%;
    transform: rotateX(-85deg);
    transition: transform 0.3s;
  }
  .slide__text-link:hover:before {
    transform: rotateX(0);
  }
</style>

<div class="slider-container">
  <div class="slider-control left inactive"></div>
  <div class="slider-control right"></div>
  <ul class="slider-pagi"></ul>
  <div class="slider">
    {% for block in section.blocks %}
      <div class="slide slide-{{ forloop.index0 }} {% if forloop.first %}active{% endif %}" data-index="{{ forloop.index0 }}">
        <div class="slide__bg" style="background-image: url('{{ block.settings.image | img_url: '2000x' }}');"></div>
        <div class="slide__content">
          <svg class="slide__overlay" viewBox="0 0 720 405" preserveAspectRatio="xMaxYMax slice">
            <path class="slide__overlay-path" d="M0,0 150,0 500,405 0,405" fill="{{ block.settings.overlay_color | default: '#303030' }}"/>
          </svg>
          <div class="slide__text">
            <h2 class="slide__text-heading">{{ block.settings.heading }}</h2>
            <p class="slide__text-desc">{{ block.settings.description }}</p>
            <a href="{{ block.settings.link_url }}" class="slide__text-link">{{ block.settings.link_text }}</a>
          </div>
        </div>
      </div>
    {% endfor %}
  </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const slider = document.querySelector('.slider');
  const slides = document.querySelectorAll('.slide');
  const slideBgs = document.querySelectorAll('.slide__bg');
  const pagination = document.querySelector('.slider-pagi');
  const leftControl = document.querySelector('.slider-control.left');
  const rightControl = document.querySelector('.slider-control.right');
  
  let currentSlide = 0;
  let isAnimating = false;
  const animTime = 500;
  let autoSlideTimeout;
  const autoSlideDelay = 4000;
  let startX = 0;
  let diff = 0;
  
  // Initialize slider
  function initSlider() {
    createBullets();
    manageControls();
    autoSlide();
    setupEventListeners();
  }
  
  // Create pagination bullets
  function createBullets() {
    slides.forEach((slide, index) => {
      const bullet = document.createElement('li');
      bullet.className = 'slider-pagi__elem';
      bullet.classList.add(`slider-pagi__elem-${index}`);
      bullet.dataset.page = index;
      if (index === 0) bullet.classList.add('active');
      bullet.addEventListener('click', () => {
        currentSlide = index;
        changeSlides();
      });
      pagination.appendChild(bullet);
    });
  }
  
  // Manage navigation controls
  function manageControls() {
    leftControl.classList.remove('inactive');
    rightControl.classList.remove('inactive');
    
    if (currentSlide === 0) {
      leftControl.classList.add('inactive');
    }
    if (currentSlide === slides.length - 1) {
      rightControl.classList.add('inactive');
    }
  }
  
  // Auto slide functionality
  function autoSlide() {
    autoSlideTimeout = setTimeout(() => {
      navigateRight();
    }, autoSlideDelay);
  }
  
  // Change slides
  function changeSlides(instant = false) {
    if (!instant) {
      isAnimating = true;
      manageControls();
      slider.classList.add('animating');
      
      // Remove active class from all slides
      slides.forEach(slide => {
        slide.classList.remove('active');
      });
      
      // Add active class to current slide
      slides[currentSlide].classList.add('active');
      
      setTimeout(() => {
        slider.classList.remove('animating');
        isAnimating = false;
      }, animTime);
    }
    
    clearTimeout(autoSlideTimeout);
    updatePagination();
    updateSliderPosition();
    autoSlide();
  }
  
  // Update pagination bullets
  function updatePagination() {
    const bullets = document.querySelectorAll('.slider-pagi__elem');
    bullets.forEach((bullet, index) => {
      bullet.classList.remove('active');
      if (index === currentSlide) {
        bullet.classList.add('active');
      }
    });
  }
  
  // Update slider position
  function updateSliderPosition() {
    slider.style.transform = `translate3d(${-currentSlide * 100}%, 0, 0)`;
    slideBgs.forEach((bg, index) => {
      bg.style.transform = `translate3d(${currentSlide * 50}%, 0, 0)`;
    });
    diff = 0;
  }
  
  // Navigation functions
  function navigateLeft() {
    if (isAnimating) return;
    if (currentSlide > 0) {
      currentSlide--;
      changeSlides();
    }
  }
  
  function navigateRight() {
    if (isAnimating) return;
    if (currentSlide < slides.length - 1) {
      currentSlide++;
    } else {
      currentSlide = 0;
    }
    changeSlides();
  }
  
  // Set up event listeners
  function setupEventListeners() {
    // Navigation controls
    leftControl.addEventListener('click', navigateLeft);
    rightControl.addEventListener('click', navigateRight);
    
    // Touch/swipe events
    slider.addEventListener('mousedown', handleTouchStart);
    slider.addEventListener('touchstart', handleTouchStart, { passive: true });
    
    // Mouse/touch end events
    document.addEventListener('mouseup', handleTouchEnd);
    document.addEventListener('touchend', handleTouchEnd);
  }
  
  // Touch start handler
  function handleTouchStart(e) {
    if (isAnimating) return;
    clearTimeout(autoSlideTimeout);
    startX = e.pageX || e.touches[0].pageX;
    diff = 0;
    
    document.addEventListener('mousemove', handleTouchMove);
    document.addEventListener('touchmove', handleTouchMove, { passive: true });
  }
  
  // Touch move handler
  function handleTouchMove(e) {
    const x = e.pageX || e.touches[0].pageX;
    const winW = window.innerWidth;
    diff = (startX - x) / winW * 70;
    
    if ((currentSlide === 0 && diff < 0) || (currentSlide === slides.length - 1 && diff > 0)) {
      diff /= 2;
    }
    
    slider.style.transform = `translate3d(${-currentSlide * 100 - diff}%, 0, 0)`;
    slideBgs.forEach(bg => {
      bg.style.transform = `translate3d(${currentSlide * 50 + diff / 2}%, 0, 0)`;
    });
  }
  
  // Touch end handler
  function handleTouchEnd() {
    document.removeEventListener('mousemove', handleTouchMove);
    document.removeEventListener('touchmove', handleTouchMove);
    
    if (isAnimating) return;
    if (!diff) {
      changeSlides(true);
      return;
    }
    
    if (diff > -8 && diff < 8) {
      changeSlides();
      return;
    }
    
    if (diff <= -8) {
      navigateLeft();
    } else if (diff >= 8) {
      navigateRight();
    }
  }
  
  // Initialize the slider
  initSlider();
});
</script>

{% schema %}
{
  "name": "Image Slider",
  "max_blocks": 5,
  "blocks": [
    {
      "type": "slide",
      "name": "Slide",
      "settings": [
        {
          "type": "image_picker",
          "id": "image",
          "label": "Slide Image"
        },
        {
          "type": "color",
          "id": "overlay_color",
          "label": "Overlay Color",
          "default": "#303030"
        },
        {
          "type": "text",
          "id": "heading",
          "label": "Heading",
          "default": "Slide Heading"
        },
        {
          "type": "textarea",
          "id": "description",
          "label": "Description",
          "default": "Slide description text goes here."
        },
        {
          "type": "text",
          "id": "link_text",
          "label": "Button Text",
          "default": "Learn More"
        },
        {
          "type": "url",
          "id": "link_url",
          "label": "Button Link"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Pwc Image Slider",
      "category": "Image",
      "blocks": [
        {
          "type": "slide"
        },
        {
          "type": "slide"
        }
      ]
    }
  ]
}
{% endschema %}